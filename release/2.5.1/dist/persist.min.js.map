{"version":3,"file":"persist.min.js","sources":["../src/browser.js","../src/consts.js","../src/storageManager.js","../src/utils.js","../src/PersistQuotaExceededError.js","../src/Persist.js","../src/index.umd.js"],"sourcesContent":["const win = (typeof window !== `undefined` && window) || {};\n\nexport {win as window};\nexport const console = win.console;\nexport const document = win.document;\nexport const history = win.history;\nexport const location = win.location;\nexport const navigator = win.navigator;\nexport const parseFloat = win.parseFloat;\nexport const performance = win.performance;\n\nlet localStorage = null;\n\nlet sessionStorage = null;\n\ntry {\n\tlocalStorage = win.localStorage;\n\tsessionStorage = win.sessionStorage;\n} catch (e) {\n}\n\nexport {\n\tlocalStorage,\n\tsessionStorage,\n};\n","import {performance, navigator, parseFloat} from \"./browser\";\n\nexport const CONST_PERSIST = \"___persist___\";\nexport const CONST_PERSIST_STATE = `state${CONST_PERSIST}`;\nexport const CONST_DEPTHS = \"depths\";\nexport const CONST_LAST_URL = \"lastUrl\";\nconst navigation = performance && performance.navigation;\n\nexport const TYPE_NAVIGATE = (navigation && navigation.TYPE_NAVIGATE) || 0;\nexport const TYPE_RELOAD = (navigation && navigation.TYPE_RELOAD) || 1;\nexport const TYPE_BACK_FORWARD = (navigation && navigation.TYPE_BACK_FORWARD) || 2;\n\nconst userAgent = navigator ? navigator.userAgent : \"\";\n\nexport const IS_PERSIST_NEEDED = (function() {\n\tconst isIOS = (new RegExp(\"iPhone|iPad\", \"i\")).test(userAgent);\n\tconst isMacSafari = (new RegExp(\"Mac\", \"i\")).test(userAgent) &&\n\t\t!(new RegExp(\"Chrome\", \"i\")).test(userAgent) &&\n\t\t(new RegExp(\"Apple\", \"i\")).test(userAgent);\n\tconst isAndroid = (new RegExp(\"Android \", \"i\")).test(userAgent);\n\tconst isWebview = (new RegExp(\"wv; |inapp;\", \"i\")).test(userAgent);\n\tconst androidVersion = isAndroid ? parseFloat(new RegExp(\n\t\t\"(Android)\\\\s([\\\\d_\\\\.]+|\\\\d_0)\", \"i\"\n\t).exec(userAgent)[2]) : undefined;\n\n\treturn !(isIOS ||\n\t\t\tisMacSafari ||\n\t\t\t(isAndroid &&\n\t\t\t\t((androidVersion <= 4.3 && isWebview) || androidVersion < 3)));\n})();\n","import {window, history, location, sessionStorage, localStorage} from \"./browser\";\nimport {CONST_PERSIST} from \"./consts\";\n\nconst isSupportState = history && \"replaceState\" in history && \"state\" in history;\nlet storageType = \"None\";\n\nfunction isStorageAvailable(storage) {\n\tif (!storage) {\n\t\treturn undefined;\n\t}\n\tconst TMP_KEY = `__tmp__${CONST_PERSIST}`;\n\n\ttry {\n\t\t// In case of iOS safari private mode, calling setItem on storage throws error\n\t\tstorage.setItem(TMP_KEY, CONST_PERSIST);\n\n\t\t// In Chrome incognito mode, can not get saved value\n\t\t// In IE8, calling storage.getItem occasionally makes \"Permission denied\" error\n\t\treturn storage.getItem(TMP_KEY) === CONST_PERSIST;\n\t} catch (e) {\n\t\treturn false;\n\t}\n}\n\nconst storage = (function() {\n\tlet strg;\n\n\tif (isStorageAvailable(sessionStorage)) {\n\t\tstrg = sessionStorage;\n\t\tstorageType = \"SessionStorage\";\n\t} else if (isStorageAvailable(localStorage)) {\n\t\tstrg = localStorage;\n\t\tstorageType = \"LocalStorage\";\n\t} else if (history.state) {\n\t\tstorageType = \"History\";\n\t}\n\n\treturn strg;\n})();\n\nfunction warnInvalidStorageValue() {\n\t/* eslint-disable no-console */\n\tconsole.warn(\"window.history or session/localStorage has no valid \" +\n\t\t\t\"format data to be handled in persist.\");\n\t/* eslint-enable no-console */\n}\n\n/*\n * Get state value\n */\nfunction getState(key) {\n\tlet state;\n\n\tlet stateStr;\n\n\tif (storage) {\n\t\tstateStr = storage.getItem(key);\n\t} else if (history.state) {\n\t\tif (typeof history.state === \"object\" && history.state !== null) {\n\t\t\tstateStr = history.state[key];\n\t\t} else {\n\t\t\twarnInvalidStorageValue();\n\t\t}\n\t} else {\n\t\tstateStr = history.state;\n\t}\n\n\t// the storage is clean\n\tif (stateStr === null) {\n\t\treturn {};\n\t}\n\n\t// \"null\" is not a valid\n\tconst isValidStateStr = typeof stateStr === \"string\" &&\n\t\t\t\t\t\t\t\tstateStr.length > 0 && stateStr !== \"null\";\n\n\ttry {\n\t\tstate = JSON.parse(stateStr);\n\n\t\t// like '[ ... ]', '1', '1.234', '\"123\"' is also not valid\n\t\tconst isValidType = !(typeof state !== \"object\" || state instanceof Array);\n\n\t\tif (!isValidStateStr || !isValidType) {\n\t\t\tthrow new Error();\n\t\t}\n\t} catch (e) {\n\t\twarnInvalidStorageValue();\n\t\tstate = {};\n\t}\n\n\t// Note2 (Android 4.3) return value is null\n\treturn state;\n}\n\n/*\n * Set state value\n */\nfunction setState(key, state) {\n\tif (storage) {\n\t\tif (state) {\n\t\t\tstorage.setItem(\n\t\t\t\tkey, JSON.stringify(state));\n\t\t} else {\n\t\t\tstorage.removeItem(key);\n\t\t}\n\t} else {\n\t\ttry {\n\t\t\tconst historyState = !history || history.state == null ? {} : history.state;\n\n\t\t\tif (history && typeof historyState === \"object\") {\n\t\t\t\thistoryState[key] = JSON.stringify(state);\n\t\t\t\thistory.replaceState(\n\t\t\t\t\thistoryState,\n\t\t\t\t\tdocument.title,\n\t\t\t\t\tlocation.href\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t/* eslint-disable no-console */\n\t\t\t\tconsole.warn(\"To use a history object, it must be an object that is not a primitive type.\");\n\t\t\t\t/* eslint-enable no-console */\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t/* eslint-disable no-console */\n\t\t\tconsole.warn(e.message);\n\t\t\t/* eslint-enable no-console */\n\t\t}\n\t}\n\n\tstate ? window[CONST_PERSIST] = true : delete window[CONST_PERSIST];\n}\n\n\nexport function getStorage() {\n\treturn storage;\n}\n\nexport function getStorageType() {\n\treturn storageType;\n}\n\nexport function getStateByKey(key, valueKey) {\n\tif (!isSupportState && !storage) {\n\t\treturn undefined;\n\t}\n\n\tlet result = getState(key)[valueKey];\n\n\t// some device returns \"null\" or undefined\n\tif (result === \"null\" || typeof result === \"undefined\") {\n\t\tresult = null;\n\t}\n\treturn result;\n}\n\nexport function setStateByKey(key, valueKey, data) {\n\tif (!isSupportState && !storage) {\n\t\treturn;\n\t}\n\n\tconst beforeData = getState(key);\n\n\tbeforeData[valueKey] = data;\n\tsetState(key, beforeData);\n}\n\n/*\n * flush current history state\n */\nexport function reset(key) {\n\tsetState(key, null);\n}\n","import {navigator, parseFloat, performance, location} from \"./browser\";\nimport {CONST_PERSIST} from \"./consts\";\n\nconst userAgent = navigator ? navigator.userAgent : \"\";\n\nexport const isNeeded = (function() {\n\tconst isIOS = (new RegExp(\"iPhone|iPad\", \"i\")).test(userAgent);\n\tconst isMacSafari = (new RegExp(\"Mac\", \"i\")).test(userAgent) &&\n\t\t!(new RegExp(\"Chrome\", \"i\")).test(userAgent) &&\n\t\t(new RegExp(\"Apple\", \"i\")).test(userAgent);\n\tconst isAndroid = (new RegExp(\"Android \", \"i\")).test(userAgent);\n\tconst isWebview = (new RegExp(\"wv; |inapp;\", \"i\")).test(userAgent);\n\tconst androidVersion = isAndroid ? parseFloat(new RegExp(\n\t\t\"(Android)\\\\s([\\\\d_\\\\.]+|\\\\d_0)\", \"i\"\n\t).exec(userAgent)[2]) : undefined;\n\n\treturn !(isIOS ||\n\t\t\tisMacSafari ||\n\t\t\t(isAndroid &&\n\t\t\t\t((androidVersion <= 4.3 && isWebview) || androidVersion < 3)));\n})();\n\n// In case of IE8, TYPE_BACK_FORWARD is undefined.\nexport function getNavigationType() {\n\treturn performance && performance.navigation &&\n\t\tperformance.navigation.type;\n}\n\nexport function getUrl() {\n\treturn location ? location.href.split(\"#\")[0] : \"\";\n}\n\nexport function getStorageKey(name) {\n\treturn name + CONST_PERSIST;\n}\n\nexport function isQuotaExceededError(e) {\n\treturn e.name === \"QuotaExceededError\" || e.name === \"PersistQuotaExceededError\";\n}\n","import {getStorage, getStorageType} from \"./storageManager\";\n\nconst setPrototypeOf = Object.setPrototypeOf || ((obj, proto) => {\n\t// eslint-disable-next-line no-proto\n\tobj.__proto__ = proto;\n\treturn obj;\n});\n\n\n/**\n * Special type of known error that {@link Persist} throws.\n * @ko Persist 내부에서 알려진 오류 발생시 throw되는 에러\n * @property {string} key Error key <ko>에러가 되는 키</ko>\n * @property {string} message Error message <ko>에러 메시지</ko>\n * @property {\"SessionStorage\" | \"LocalStorage\" | \"History\" | \"None\"} storageType The storage type in which the error occurred <ko>에러가 발생한 스토리지 타입</ko>\n * @property {number} size The size of the value in which the error occurred <ko>에러가 발생한 값의 사이즈</ko>\n * @property {Object} values Values of high size in storage. (maxLengh: 3) <ko>스토리지의 높은 사이즈의 값들. (최대 3개)</ko>\n * @example\n * ```ts\n * import Persist, { PersistQuotaExceededError } from \"@egjs/persist\";\n * try {\n *   const persist = new Persist(\"key\");\n * } catch (e) {\n *   if (e instanceof PersistQuotaExceededError) {\n *     console.error(\"size\", e.size);\n *   }\n * }\n * ```\n */\nclass PersistQuotaExceededError extends Error {\n\t/**\n\t * @param key Error message<ko>에러 메시지</ko>\n\t * @param value Error value<ko>에러 값</ko>\n\t */\n\tconstructor(key, value) {\n\t\tconst size = value.length;\n\t\tconst storageType = getStorageType();\n\t\tconst storage = getStorage();\n\t\tlet valuesText = \"\";\n\t\tlet values = [];\n\n\t\tif (storage) {\n\t\t\tconst length = storage.length;\n\n\t\t\tfor (let i = 0; i < length; ++i) {\n\t\t\t\tconst itemKey = storage.key(i);\n\t\t\t\tconst item = storage.getItem(itemKey) || \"\";\n\n\t\t\t\tvalues.push({key: itemKey, size: item.length});\n\t\t\t}\n\t\t\tvalues = values.sort((a, b) => b.size - a.size).slice(0, 3);\n\n\t\t\tif (values.length) {\n\t\t\t\tvaluesText = ` The highest values of ${storageType} are ${values.map(item => JSON.stringify({[item.key]: item.size})).join(\", \")}.`;\n\t\t\t}\n\t\t}\n\n\t\tsuper(`Setting the value (size: ${size}) of '${key}' exceeded the ${storageType}'s quota.${valuesText}`);\n\n\t\tsetPrototypeOf(this, PersistQuotaExceededError.prototype);\n\t\tthis.name = \"PersistQuotaExceededError\";\n\t\tthis.storageType = storageType;\n\t\tthis.key = key;\n\t\tthis.size = size;\n\t\tthis.values = values;\n\t}\n}\n\nexport default PersistQuotaExceededError;\n","/* eslint-disable no-use-before-define */\nimport {\n\treset,\n\tsetStateByKey,\n\tgetStateByKey,\n\tgetStorage,\n} from \"./storageManager\";\nimport PersistQuotaExceededError from \"./PersistQuotaExceededError\";\nimport {isNeeded, getUrl, getStorageKey, getNavigationType, isQuotaExceededError} from \"./utils\";\nimport {console, window} from \"./browser\";\nimport {TYPE_BACK_FORWARD, TYPE_NAVIGATE, CONST_PERSIST_STATE, CONST_DEPTHS, CONST_LAST_URL} from \"./consts\";\n\nlet currentUrl = \"\";\n\n\nfunction execRec(obj, path, func) {\n\tlet _obj = obj;\n\n\tif (!_obj) {\n\t\t_obj = isNaN(path[0]) ? {} : [];\n\t}\n\n\tconst head = path.shift();\n\n\tif (path.length === 0) {\n\t\tif (_obj instanceof Array && isNaN(head)) {\n\t\t\tconsole.warn(\"Don't use key string on array\");\n\t\t}\n\t\tfunc(_obj, head);\n\t\treturn _obj;\n\t}\n\n\t_obj[head] = execRec(_obj[head], path, func);\n\treturn _obj;\n}\n\nfunction setPersistState(key, value) {\n\ttry {\n\t\tsetStateByKey(CONST_PERSIST_STATE, key, value);\n\t} catch (e) {\n\t\tif (catchQuotaExceededError(e, CONST_PERSIST_STATE, value)) {\n\t\t\tif (key === CONST_LAST_URL) {\n\t\t\t\tsetPersistState(key, value);\n\t\t\t} else if (key === CONST_DEPTHS) {\n\t\t\t\tsetPersistState(key, value && value.slice(1));\n\t\t\t}\n\t\t}\n\t}\n}\nfunction getPersistState(key) {\n\treturn getStateByKey(CONST_PERSIST_STATE, key);\n}\nfunction updateDepth(type = 0) {\n\tconst url = getUrl();\n\n\tif (currentUrl === url) {\n\t\treturn;\n\t}\n\t// url is not the same for the first time, pushState, or replaceState.\n\tconst prevUrl = currentUrl;\n\n\ttry {\n\t\tcurrentUrl = url;\n\t\tconst depths = getPersistState(CONST_DEPTHS) || [];\n\n\t\tif (type === TYPE_BACK_FORWARD) {\n\t\t\t// Change current url only\n\t\t\tconst currentIndex = depths.indexOf(url);\n\n\t\t\t~currentIndex && setPersistState(CONST_LAST_URL, url);\n\t\t} else {\n\t\t\tconst prevLastUrl = getPersistState(CONST_LAST_URL);\n\n\t\t\treset(getStorageKey(url));\n\n\t\t\tif (type === TYPE_NAVIGATE && url !== prevLastUrl) {\n\t\t\t\t// Remove all url lists with higher index than current index\n\t\t\t\tconst prevLastIndex = depths.indexOf(prevLastUrl);\n\t\t\t\tconst removedList = depths.splice(prevLastIndex + 1, depths.length);\n\n\t\t\t\tremovedList.forEach(removedUrl => {\n\t\t\t\t\treset(getStorageKey(removedUrl));\n\t\t\t\t});\n\t\t\t\t// If the type is NAVIGATE and there is information about current url, delete it.\n\t\t\t\tconst currentIndex = depths.indexOf(url);\n\n\t\t\t\t~currentIndex && depths.splice(currentIndex, 1);\n\t\t\t}\n\t\t\t// Add depth for new address.\n\t\t\tif (depths.indexOf(url) < 0) {\n\t\t\t\tdepths.push(url);\n\t\t\t}\n\t\t\tsetPersistState(CONST_DEPTHS, depths);\n\t\t\tsetPersistState(CONST_LAST_URL, url);\n\t\t}\n\t} catch (e) {\n\t\t// revert currentUrl\n\t\tcurrentUrl = prevUrl;\n\t\tthrow e;\n\t}\n}\n\nfunction catchQuotaExceededError(e, key, value) {\n\tif (clearFirst()) {\n\t\treturn true;\n\t} else if (isQuotaExceededError(e)) {\n\t\tthrow new PersistQuotaExceededError(key, value ? JSON.stringify(value) : \"\");\n\t} else {\n\t\tthrow e;\n\t}\n}\n\nfunction clearFirst() {\n\tconst depths = getPersistState(CONST_DEPTHS) || [];\n\tconst removed = depths.splice(0, 1);\n\n\tif (!removed.length) {\n\t\t// There is an error because there is no depth to add data.\n\t\treturn false;\n\t}\n\tconst removedUrl = removed[0];\n\n\treset(getStorageKey(removedUrl));\n\tif (currentUrl === removedUrl) {\n\t\tcurrentUrl = \"\";\n\t\tsetPersistState(CONST_LAST_URL, \"\");\n\t\tif (!depths.length) {\n\t\t\t// I tried to add myself, but it didn't add up, so I got an error.\n\t\t\treturn false;\n\t\t}\n\t}\n\tsetPersistState(CONST_DEPTHS, depths);\n\t// Clear the previous record and try to add data again.\n\treturn true;\n}\n\nfunction clear() {\n\tconst depths = getPersistState(CONST_DEPTHS) || [];\n\n\tdepths.forEach(url => {\n\t\treset(getStorageKey(url));\n\t});\n\n\treset(CONST_PERSIST_STATE);\n\n\tcurrentUrl = \"\";\n}\n\n/**\n * Get or store the current state of the web page using JSON.\n * @ko 웹 페이지의 현재 상태를 JSON 형식으로 저장하거나 읽는다.\n * @alias eg.Persist\n *\n * @support {\"ie\": \"9+\", \"ch\" : \"latest\", \"ff\" : \"latest\",  \"sf\" : \"latest\" , \"edge\" : \"latest\", \"ios\" : \"7+\", \"an\" : \"2.3+ (except 3.x)\"}\n */\nclass Persist {\n\tstatic VERSION = \"#__VERSION__#\";\n\tstatic StorageManager = {\n\t\treset,\n\t\tsetStateByKey,\n\t\tgetStateByKey,\n\t\tgetStorage,\n\t};\n\t/**\n\t * @static\n\t * Clear all information in Persist\n\t */\n\tstatic clear() {\n\t\tclear();\n\t}\n\t/**\n\t * @static\n\t * Return whether you need \"Persist\" module by checking the bfCache support of the current browser\n\t * @return {Boolean}\n\t */\n\tstatic isNeeded() {\n\t\treturn isNeeded;\n\t}\n\t/**\n\t* Constructor\n\t* @param {String} key The key of the state information to be stored <ko>저장할 상태 정보의 키</ko>\n\t**/\n\tconstructor(key) {\n\t\tthis.key = key || \"\";\n\t}\n\n\t/**\n\t * Read value\n\t * @param {String?} path target path\n\t * @return {String|Number|Boolean|Object|Array}\n\t */\n\tget(path) {\n\t\t// update url for pushState, replaceState\n\t\tupdateDepth(TYPE_NAVIGATE);\n\n\t\t// find path\n\t\tconst urlKey = getStorageKey(getUrl());\n\t\tconst globalState = getStateByKey(urlKey, this.key);\n\n\n\t\tif (!path || path.length === 0) {\n\t\t\treturn globalState;\n\t\t}\n\n\t\tconst pathToken = path.split(\".\");\n\n\t\tlet currentItem = globalState;\n\n\t\tlet isTargetExist = true;\n\n\t\tfor (let i = 0; i < pathToken.length; i++) {\n\t\t\tif (!currentItem) {\n\t\t\t\tisTargetExist = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcurrentItem = currentItem[pathToken[i]];\n\t\t}\n\t\tif (!isTargetExist || currentItem == null) {\n\t\t\treturn null;\n\t\t}\n\t\treturn currentItem;\n\t}\n\t/**\n\t * Save value\n\t * @param {String} path target path\n\t * @param {String|Number|Boolean|Object|Array} value value to save\n\t * @return {Persist}\n\t */\n\tset(path, value) {\n\t\t// update url for pushState, replaceState\n\t\tupdateDepth(TYPE_NAVIGATE);\n\t\t// find path\n\t\tconst key = this.key;\n\t\tconst urlKey = getStorageKey(getUrl());\n\t\tconst globalState = getStateByKey(urlKey, key);\n\n\t\ttry {\n\t\t\tif (path.length === 0) {\n\t\t\t\tsetStateByKey(urlKey, key, value);\n\t\t\t} else {\n\t\t\t\tconst allValue = execRec(globalState, path.split(\".\"), (obj, head) => {\n\t\t\t\t\tobj[head] = value;\n\t\t\t\t});\n\n\t\t\t\tsetStateByKey(\n\t\t\t\t\turlKey,\n\t\t\t\t\tkey,\n\t\t\t\t\tallValue\n\t\t\t\t);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (catchQuotaExceededError(e, urlKey, value)) {\n\t\t\t\tthis.set(path, value);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\t/**\n\t * Remove value\n\t * @param {String} path target path\n\t * @return {Persist}\n\t */\n\tremove(path) {\n\t\t// update url for pushState, replaceState\n\t\tupdateDepth(TYPE_NAVIGATE);\n\n\t\t// find path\n\t\tconst key = this.key;\n\t\tconst urlKey = getStorageKey(getUrl());\n\t\tconst globalState = getStateByKey(urlKey, key);\n\n\t\ttry {\n\t\t\tif (path.length === 0) {\n\t\t\t\tsetStateByKey(urlKey, key, null);\n\t\t\t} else {\n\t\t\t\tconst value = execRec(globalState, path.split(\".\"), (obj, head) => {\n\t\t\t\t\tif (typeof obj === \"object\") {\n\t\t\t\t\t\tdelete obj[head];\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tsetStateByKey(\n\t\t\t\t\turlKey,\n\t\t\t\t\tkey,\n\t\t\t\t\tvalue\n\t\t\t\t);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (catchQuotaExceededError(e)) {\n\t\t\t\tthis.remove(path);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n}\n\n\nif (\"onpopstate\" in window) {\n\twindow.addEventListener(\"popstate\", () => {\n\t\t// popstate event occurs when backward or forward\n\t\ttry {\n\t\t\tupdateDepth(TYPE_BACK_FORWARD);\n\t\t} catch (e) {\n\t\t\t// Global function calls prevent errors.\n\t\t\tif (!isQuotaExceededError(e)) {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t});\n}\n\n// If navigation's type is not TYPE_BACK_FORWARD, delete information about current url.\ntry {\n\tupdateDepth(getNavigationType());\n} catch (e) {\n\t// Global function calls prevent errors.\n\tif (!isQuotaExceededError(e)) {\n\t\tthrow e;\n\t}\n}\n\nexport {\n\tupdateDepth,\n};\n\nexport default Persist;\n","import Persist, * as modules from \"./index\";\n\nfor (const name in modules) {\n\tPersist[name] = modules[name];\n}\n\nexport default Persist;\n"],"names":["win","window","console","history","document","location","navigator","parseFloat","performance","localStorage","sessionStorage","e","isIOS","isMacSafari","isAndroid","isWebview","androidVersion","CONST_PERSIST","CONST_PERSIST_STATE","CONST_DEPTHS","CONST_LAST_URL","navigation","TYPE_NAVIGATE","TYPE_BACK_FORWARD","TYPE_RELOAD","userAgent","isSupportState","RegExp","test","exec","undefined","storageType","isStorageAvailable","storage","TMP_KEY","setItem","getItem","strg","state","warnInvalidStorageValue","warn","getState","key","stateStr","isValidStateStr","length","isValidType","JSON","parse","Array","Error","setState","stringify","removeItem","historyState","replaceState","title","href","message","getStorage","getStateByKey","valueKey","result","setStateByKey","data","beforeData","reset","setPrototypeOf","Object","obj","proto","__proto__","PersistQuotaExceededError","value","size","valuesText","values","i","itemKey","item","push","sort","a","b","slice","map","join","prototype","name","isNeeded","getUrl","split","getStorageKey","isQuotaExceededError","currentUrl","execRec","path","func","_obj","isNaN","head","shift","setPersistState","catchQuotaExceededError","getPersistState","updateDepth","type","url","prevUrl","depths","indexOf","prevLastUrl","prevLastIndex","splice","forEach","removedUrl","currentIndex","removed","clearFirst","Persist","clear","get","globalState","this","pathToken","currentItem","isTargetExist","set","urlKey","remove","VERSION","StorageManager","addEventListener","modules"],"mappings":"sMAAA,IAAMA,sBAAcC,QAA0BA,QAAW,GAG5CC,EAAUF,EAAIE,QAEdC,GADWH,EAAII,SACLJ,EAAIG,SACdE,EAAWL,EAAIK,SACfC,EAAYN,EAAIM,UAChBC,EAAaP,EAAIO,WACjBC,EAAcR,EAAIQ,YAE3BC,EAAe,KAEfC,EAAiB,KAErB,IACCD,EAAeT,EAAIS,aACnBC,EAAiBV,EAAIU,eACpB,MAAOC,IChBF,IAaAC,EACAC,EAGAC,EACAC,EACAC,EAnBMC,EAAgB,gBAChBC,UAA8BD,EAC9BE,EAAe,SACfC,EAAiB,UACxBC,EAAab,GAAeA,EAAYa,WAEjCC,EAAiBD,GAAcA,EAAWC,eAAkB,EAE5DC,GADeF,GAAcA,EAAWG,YACnBH,GAAcA,EAAWE,mBAAsB,GAE3EE,EAAYnB,EAAYA,EAAUmB,UAAY,GCT9CC,GDYCd,EAAS,IAAIe,OAAO,cAAe,KAAMC,KAAKH,GAC9CZ,EAAe,IAAIc,OAAO,MAAO,KAAMC,KAAKH,KAC/C,IAAIE,OAAO,SAAU,KAAMC,KAAKH,IACjC,IAAIE,OAAO,QAAS,KAAMC,KAAKH,GAC3BX,EAAa,IAAIa,OAAO,WAAY,KAAMC,KAAKH,GAC/CV,EAAa,IAAIY,OAAO,cAAe,KAAMC,KAAKH,GAClDT,EAAiBF,EAAYP,EAAW,IAAIoB,OACjD,iCAAkC,KACjCE,KAAKJ,GAAW,SAAMK,ECpBF3B,GAAW,iBAAkBA,GAAW,UAAWA,GACtE4B,EAAc,OAElB,SAASC,EAAmBC,MACtBA,OAGCC,YAAoBjB,aAIzBgB,EAAQE,QAAQD,EAASjB,GAIlBgB,EAAQG,QAAQF,KAAajB,EACnC,MAAON,UACD,IAIT,IACK0B,EADCJ,GAGDD,EAAmBtB,IACtB2B,EAAO3B,EACPqB,EAAc,kBACJC,EAAmBvB,IAC7B4B,EAAO5B,EACPsB,EAAc,gBACJ5B,EAAQmC,QAClBP,EAAc,WAGRM,GAGR,SAASE,IAERrC,QAAQsC,KAAK,6FAQd,SAASC,EAASC,OACbJ,EAEAK,KAEAV,EACHU,EAAWV,EAAQG,QAAQM,GACjBvC,EAAQmC,MACW,iBAAlBnC,EAAQmC,OAAwC,OAAlBnC,EAAQmC,MAChDK,EAAWxC,EAAQmC,MAAMI,GAEzBH,IAGDI,EAAWxC,EAAQmC,MAIH,OAAbK,QACI,OAIFC,EAAsC,iBAAbD,GACN,EAAlBA,EAASE,QAA2B,SAAbF,UAMvBG,IAAiC,iBAHvCR,EAAQS,KAAKC,MAAML,KAGgCL,aAAiBW,WAE/DL,IAAoBE,QAClB,IAAII,MAEV,MAAOvC,GACR4B,IACAD,EAAQ,UAIFA,EAMR,SAASa,EAAST,EAAKJ,MAClBL,EACCK,EACHL,EAAQE,QACPO,EAAKK,KAAKK,UAAUd,IAErBL,EAAQoB,WAAWX,gBAIbY,EAAgBnD,GAA4B,MAAjBA,EAAQmC,MAAqBnC,EAAQmC,MAAb,GAErDnC,GAAmC,iBAAjBmD,GACrBA,EAAaZ,GAAOK,KAAKK,UAAUd,GACnCnC,EAAQoD,aACPD,EACAlD,SAASoD,MACTnD,EAASoD,OAIVvD,QAAQsC,KAAK,+EAGb,MAAO7B,GAERT,QAAQsC,KAAK7B,EAAE+C,SAKjBpB,EAAQrC,EAAOgB,IAAiB,SAAchB,EAAOgB,GAI/C,SAAS0C,WACR1B,EAOD,SAAS2B,EAAclB,EAAKmB,MAC7BnC,GAAmBO,OAIpB6B,EAASrB,EAASC,GAAKmB,SAGZ,SAAXC,QAAuC,IAAXA,IAC/BA,EAAS,MAEHA,GAGD,SAASC,EAAcrB,EAAKmB,EAAUG,MACvCtC,GAAmBO,OAIlBgC,EAAaxB,EAASC,GAE5BuB,EAAWJ,GAAYG,EACvBb,EAAST,EAAKuB,IAMR,SAASC,EAAMxB,GACrBS,EAAST,EAAK,owCCnKR9B,EACAC,EAGAC,EACAC,EACAC,ECVDmD,EAAiBC,OAAOD,gBAAmB,SAACE,EAAKC,UAEtDD,EAAIE,UAAYD,EACTD,GAwBFG,iCAKO9B,EAAK+B,SACVC,EAAOD,EAAM5B,OACbd,EFqGAA,EEpGAE,EAAU0B,IACZgB,EAAa,GACbC,EAAS,MAET3C,EAAS,SACNY,EAASZ,EAAQY,OAEdgC,EAAI,EAAGA,EAAIhC,IAAUgC,EAAG,KAC1BC,EAAU7C,EAAQS,IAAImC,GACtBE,EAAO9C,EAAQG,QAAQ0C,IAAY,GAEzCF,EAAOI,KAAK,CAACtC,IAAKoC,EAASJ,KAAMK,EAAKlC,UAEvC+B,EAASA,EAAOK,KAAK,SAACC,EAAGC,UAAMA,EAAET,KAAOQ,EAAER,OAAMU,MAAM,EAAG,IAE9CvC,SACV8B,4BAAuC5C,UAAmB6C,EAAOS,IAAI,SAAAN,gBAAQhC,KAAKK,kBAAY2B,EAAKrC,KAAMqC,EAAKL,WAAQY,KAAK,4DAI3FZ,WAAahC,oBAAqBX,cAAuB4C,SAE3FR,UAAqBK,EAA0Be,aAC1CC,KAAO,8BACPzD,YAAcA,IACdW,IAAMA,IACNgC,KAAOA,IACPE,OAASA,uGAnCwB1B,QD1BlCzB,EAAYnB,EAAYA,EAAUmB,UAAY,GAEvCgE,GACN7E,EAAS,IAAIe,OAAO,cAAe,KAAMC,KAAKH,GAC9CZ,EAAe,IAAIc,OAAO,MAAO,KAAMC,KAAKH,KAC/C,IAAIE,OAAO,SAAU,KAAMC,KAAKH,IACjC,IAAIE,OAAO,QAAS,KAAMC,KAAKH,GAC3BX,EAAa,IAAIa,OAAO,WAAY,KAAMC,KAAKH,GAC/CV,EAAa,IAAIY,OAAO,cAAe,KAAMC,KAAKH,GAClDT,EAAiBF,EAAYP,EAAW,IAAIoB,OACjD,iCAAkC,KACjCE,KAAKJ,GAAW,SAAMK,IAEflB,GACPC,GACCC,IACEE,GAAkB,KAAOD,GAAcC,EAAiB,KASvD,SAAS0E,WACRrF,EAAWA,EAASoD,KAAKkC,MAAM,KAAK,GAAK,GAG1C,SAASC,EAAcJ,UACtBA,EAAOvE,EAGR,SAAS4E,EAAqBlF,SAClB,uBAAXA,EAAE6E,MAA4C,8BAAX7E,EAAE6E,KEzB7C,IAAIM,EAAa,GAGjB,SAASC,EAAQ1B,EAAK2B,EAAMC,OACvBC,EAAO7B,EAEN6B,IACJA,EAAOC,MAAMH,EAAK,IAAM,GAAK,QAGxBI,EAAOJ,EAAKK,eAEE,IAAhBL,EAAKnD,QACJqD,aAAgBjD,OAASkD,MAAMC,IAClClG,EAAQsC,KAAK,iCAEdyD,EAAKC,EAAME,IAIZF,EAAKE,GAAQL,EAAQG,EAAKE,GAAOJ,EAAMC,GAH/BC,EAOT,SAASI,EAAgB5D,EAAK+B,OAE5BV,EAAc7C,EAAqBwB,EAAK+B,GACvC,MAAO9D,GACJ4F,GAAwB5F,EAAGO,EAAqBuD,KAC/C/B,IAAQtB,EACXkF,EAAgB5D,EAAK+B,GACX/B,IAAQvB,GAClBmF,EAAgB5D,EAAK+B,GAASA,EAAMW,MAAM,MAK9C,SAASoB,GAAgB9D,UACjBkB,EAAc1C,EAAqBwB,GAE3C,SAAS+D,GAAYC,YAAAA,IAAAA,EAAO,OACrBC,EAAMjB,OAERI,IAAea,OAIbC,EAAUd,MAGfA,EAAaa,MACPE,EAASL,GAAgBrF,IAAiB,MAE5CuF,IAASnF,EAAmB,EAEVsF,EAAOC,QAAQH,IAEnBL,EAAgBlF,EAAgBuF,OAC3C,KACAI,EAAcP,GAAgBpF,MAEpC8C,EAAM0B,EAAce,IAEhBD,IAASpF,GAAiBqF,IAAQI,EAAa,KAE5CC,EAAgBH,EAAOC,QAAQC,GACjBF,EAAOI,OAAOD,EAAgB,EAAGH,EAAOhE,QAEhDqE,QAAQ,SAAAC,GACnBjD,EAAM0B,EAAcuB,UAGfC,EAAeP,EAAOC,QAAQH,IAEnCS,GAAgBP,EAAOI,OAAOG,EAAc,GAG1CP,EAAOC,QAAQH,GAAO,GACzBE,EAAO7B,KAAK2B,GAEbL,EAAgBnF,EAAc0F,GAC9BP,EAAgBlF,EAAgBuF,IAEhC,MAAOhG,SAERmF,EAAac,EACPjG,IAIR,SAAS4F,GAAwB5F,EAAG+B,EAAK+B,MAUzC,eACOoC,EAASL,GAAgBrF,IAAiB,GAC1CkG,EAAUR,EAAOI,OAAO,EAAG,OAE5BI,EAAQxE,cAEL,MAEFsE,EAAaE,EAAQ,MAE3BnD,EAAM0B,EAAcuB,IAChBrB,IAAeqB,IAElBb,EAAgBlF,EADhB0E,EAAa,KAERe,EAAOhE,eAEJ,SAGTyD,EAAgBnF,EAAc0F,IAEvB,EA9BHS,UACI,EACD,MAAIzB,EAAqBlF,GACzB,IAAI6D,EAA0B9B,EAAK+B,EAAQ1B,KAAKK,UAAUqB,GAAS,IAEnE9D,MA+CF4G,kBAAAA,wBA2BO7E,QACNA,IAAMA,GAAO,KAhBZ8E,kBA9BQhB,GAAgBrF,IAAiB,IAEzC+F,QAAQ,SAAAP,GACdzC,EAAM0B,EAAce,MAGrBzC,EAAMhD,GAEN4E,EAAa,MA8BNL,2BACCA,8BAeRgC,aAAIzB,GAEHS,GAAYnF,OAINoG,EAAc9D,EADLgC,EAAcF,KACaiC,KAAKjF,SAG1CsD,GAAwB,IAAhBA,EAAKnD,cACV6E,UAGFE,EAAY5B,EAAKL,MAAM,KAEzBkC,EAAcH,EAEdI,GAAgB,EAEXjD,EAAI,EAAGA,EAAI+C,EAAU/E,OAAQgC,IAAK,KACrCgD,EAAa,CACjBC,GAAgB,QAGjBD,EAAcA,EAAYD,EAAU/C,WAEhCiD,GAAgC,MAAfD,EAGfA,EAFC,QAUTE,aAAI/B,EAAMvB,GAETgC,GAAYnF,OAENoB,EAAMiF,KAAKjF,IACXsF,EAASpC,EAAcF,KACvBgC,EAAc9D,EAAcoE,EAAQtF,UAGrB,IAAhBsD,EAAKnD,OACRkB,EAAciE,EAAQtF,EAAK+B,QAM3BV,EACCiE,EACAtF,EANgBqD,EAAQ2B,EAAa1B,EAAKL,MAAM,KAAM,SAACtB,EAAK+B,GAC5D/B,EAAI+B,GAAQ3B,KASb,MAAO9D,GACJ4F,GAAwB5F,EAAGqH,EAAQvD,SACjCsD,IAAI/B,EAAMvB,UAGVkD,QAORM,gBAAOjC,GAENS,GAAYnF,OAGNoB,EAAMiF,KAAKjF,IACXsF,EAASpC,EAAcF,KACvBgC,EAAc9D,EAAcoE,EAAQtF,UAGrB,IAAhBsD,EAAKnD,OACRkB,EAAciE,EAAQtF,EAAK,WAQ3BqB,EACCiE,EACAtF,EARaqD,EAAQ2B,EAAa1B,EAAKL,MAAM,KAAM,SAACtB,EAAK+B,GACtC,iBAAR/B,UACHA,EAAI+B,MAUb,MAAOzF,GACJ4F,GAAwB5F,SACtBsH,OAAOjC,UAGP2B,kBAzIHJ,EACEW,QAAU,QADZX,EAEEY,eAAiB,CACvBjE,MAAAA,EACAH,cAAAA,EACAH,cAAAA,EACAD,WAAAA,GANI4D,KA8IF,eAAgBtH,GACnBA,EAAOmI,iBAAiB,WAAY,eAGlC3B,GAAYlF,GACX,MAAOZ,OAEHkF,EAAqBlF,SACnBA,KAOV,IACC8F,GFjSOjG,GAAeA,EAAYa,YACjCb,EAAYa,WAAWqF,MEiSvB,MAAO/F,OAEHkF,EAAqBlF,SACnBA,iEC3TR,IAAK,IAAM6E,MAAQ6C,GAClBd,GAAQ/B,IAAQ6C,GAAQ7C"}